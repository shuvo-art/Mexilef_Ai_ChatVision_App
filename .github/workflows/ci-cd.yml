name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Updated to latest version

      - name: Set up Node.js
        uses: actions/setup-node@v4 # Updated to latest version
        with:
          node-version: '18'
          cache: 'npm' # Cache Node.js dependencies

      - name: Install backend dependencies
        run: npm ci

      - name: Build backend
        run: npm run build

      - name: Run backend tests
        run: npm test || echo "No tests defined"
        env:
          NODE_ENV: test
          MONGO_URI: ${{ secrets.TEST_MONGO_URI }}
          JWT_SECRET: test-secret
          OPENAI_API_KEY: test-key

      - name: Set up Python
        uses: actions/setup-python@v5 # Updated to latest version
        with:
          python-version: '3.9'
          cache: 'pip' # Cache Python dependencies

      - name: Install Python dependencies
        run: |
          cd maxim
          pip install -r requirements.txt

      - name: Run Python tests
        run: |
          cd maxim
          pytest || echo "No Python tests defined"

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3 # Updated to latest version
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend Docker image
        uses: docker/build-push-action@v6 # Updated to latest version
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/mexilef-advision-ai:latest # Updated image name
          cache-from: type=gha
          cache-to: type=gha,mode=max # Enable GitHub Actions caching

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # Updated to latest version
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update task definition
        run: |
          sed -i "s|\${DOCKER_USERNAME}|${{ secrets.DOCKER_USERNAME }}|g" task-definition.json
          sed -i "s|\${AWS_ACCOUNT_ID}|${{ secrets.AWS_ACCOUNT_ID }}|g" task-definition.json
          sed -i "s|\${AWS_SECRETS_ARN}|${{ secrets.AWS_SECRETS_ARN }}|g" task-definition.json
          sed -i "s|\${BASE_URL}|${{ secrets.BASE_URL }}|g" task-definition.json
          sed -i "s|\${ALLOWED_ORIGINS}|${{ secrets.ALLOWED_ORIGINS }}|g" task-definition.json
          sed -i "s|\${CLOUDINARY_CLOUD_NAME}|${{ secrets.CLOUDINARY_CLOUD_NAME }}|g" task-definition.json
          sed -i "s|\${CLOUDINARY_API_KEY}|${{ secrets.CLOUDINARY_API_KEY }}|g" task-definition.json

      - name: Deploy to AWS ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2 # Updated to latest version
        with:
          task-definition: task-definition.json
          service: mexilef-advision-ai-service # Updated service name
          cluster: mexilef-advision-ai-cluster # Updated cluster name
          wait-for-service-stability: true